package com.commsdk.base.retrofit;
import com.commsdk.base.Constant;
import com.commsdk.common.LogUtil;
import com.google.gson.Gson;

import retrofit2.adapter.rxjava.HttpException;
import rx.Subscriber;

/**
 * 描述：网络返回结果统一处理
 * 作者：Linxz
 * E-mail:lin_xiao_zhang@163.com
 * 时间:2017年07月12日  18:16
 * 版本：3.0
 */

public abstract class ApiCallback<M> extends Subscriber<M>{

    public abstract void onSuccess(M model);

    public abstract void onFailure(String msg);

    public abstract void onFinish();

    @Override
    public void onCompleted() {
        onFinish();
    }

    @Override
    public void onNext(M model) {
        onSuccess(model);
    }

    @Override
    public void onError(Throwable e) {
        e.printStackTrace();
        if (e instanceof HttpException) {
            HttpException httpException = (HttpException) e;
            //httpException.response().errorBody().string()
            int code = httpException.code();
            String msg = httpException.getMessage();
            LogUtil.d(""+this.getClass().getSimpleName(),"code=" + code);
            if (code == Constant.CODE_504) {
                msg = "网络不给力";
            }
            if (code == Constant.CODE_502 || code == Constant.CODE_404) {
                msg = "服务器异常，请稍后再试";
            }
            LogUtil.d("ApiCallback failure:--->>",msg);
            onFailure(msg);
        } else {
            LogUtil.d("ApiCallback failure:--->>",e.getMessage());
            onFailure(e.getMessage());
        }
        onFinish();
    }

}
